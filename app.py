# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jBvrmgZBOG5GLSc_bWQix__r0ouehHBJ
"""

# Commented out IPython magic to ensure Python compatibility.
# # prompt: create app.py
# 
# %%writefile app.py
# # contents of app.py
# print('Hello World!')
#

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

file_path='/content/app.py'
df=pd.read_csv(file_path)

# Get a quick glimpse of the first few rows
df.head()

# See some summary statistics of numerical columns (if any)
df.describe()

# Check for missing values
df.isnull().sum()
df.describe()
df.head()

# prompt: split df to train test and validate

from sklearn.model_selection import train_test_split

# Split into train and test (80% train, 20% test)
df_train, df_test = train_test_split(df, test_size=0.2, random_state=42)

# Further split train into train and validation (75% of the remaining train, which is 25% of the original)
df_train, df_val = train_test_split(df_train, test_size=0.25, random_state=42)

print(f"Train set size: {df_train.shape}")
print(f"Validation set size: {df_val.shape}")
print(f"Test set size: {df_test.shape}")

# prompt: # prompt: train the model for sentiment analysis

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.pipeline import Pipeline

# Assuming 'text' column contains the text data and 'sentiment' is the target
X_train = df_train['text']
y_train = df_train['rating']
X_val = df_val['text']
y_val = df_val['rating']

# Create a pipeline with TF-IDF vectorization and Logistic Regression
model = Pipeline([
    ('tfidf', TfidfVectorizer()),
    ('clf', LogisticRegression())
])

# Train the model
model.fit(X_train, y_train)

# Evaluate on validation set
from sklearn.metrics import accuracy_score
y_pred = model.predict(X_val)
accuracy = accuracy_score(y_val, y_pred)
print(f"Validation accuracy: {accuracy}")